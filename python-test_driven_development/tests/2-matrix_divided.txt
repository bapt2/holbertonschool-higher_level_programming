>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[6, 9, 12], [15, 18, 21]]
>>> matrix_divided(matrix, 3)
[[2.0, 3.0, 4.0], [5.0, 6.0, 7.0]]

>>> matrix = [[7, 8, 9], [8, 9, 10]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix = [[3, 9], [12, 15, 18]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [[3, "9"], [15, 18]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[4, 6, 8], [10, 12, 14]]
>>> matrix_divided(matrix, 2)
[[2.0, 3.0, 4.0], [5.0, 6.0, 7.0]]

>>> matrix = [[4, 6, 8], [10, 12, 14]]
>>> matrix_divided(matrix, "hello")
Traceback (most recent call last)
TypeError: div must be a number

>>> matrix = [[4, 6, 8]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last)
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided()
Traceback (most recent call last)
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix = [[5, 4], [8, 9]]
>>> matrix_divided(matrix, float('inf'))
Traceback (most recent call last):
TypeError: div must be a number
